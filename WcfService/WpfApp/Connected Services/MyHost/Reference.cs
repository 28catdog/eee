//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp.MyHost {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyHost.IMyHostService")]
    public interface IMyHostService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyHostService/GetFilePath", ReplyAction="http://tempuri.org/IMyHostService/GetFilePathResponse")]
        void GetFilePath(string rootpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyHostService/GetFilePath", ReplyAction="http://tempuri.org/IMyHostService/GetFilePathResponse")]
        System.Threading.Tasks.Task GetFilePathAsync(string rootpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyHostService/Registered", ReplyAction="http://tempuri.org/IMyHostService/RegisteredResponse")]
        string Registered();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyHostService/Registered", ReplyAction="http://tempuri.org/IMyHostService/RegisteredResponse")]
        System.Threading.Tasks.Task<string> RegisteredAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyHostService/Login", ReplyAction="http://tempuri.org/IMyHostService/LoginResponse")]
        bool Login(int User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyHostService/Login", ReplyAction="http://tempuri.org/IMyHostService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(int User);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyHostServiceChannel : WpfApp.MyHost.IMyHostService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyHostServiceClient : System.ServiceModel.ClientBase<WpfApp.MyHost.IMyHostService>, WpfApp.MyHost.IMyHostService {
        
        public MyHostServiceClient() {
        }
        
        public MyHostServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyHostServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyHostServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyHostServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GetFilePath(string rootpath) {
            base.Channel.GetFilePath(rootpath);
        }
        
        public System.Threading.Tasks.Task GetFilePathAsync(string rootpath) {
            return base.Channel.GetFilePathAsync(rootpath);
        }
        
        public string Registered() {
            return base.Channel.Registered();
        }
        
        public System.Threading.Tasks.Task<string> RegisteredAsync() {
            return base.Channel.RegisteredAsync();
        }
        
        public bool Login(int User) {
            return base.Channel.Login(User);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(int User) {
            return base.Channel.LoginAsync(User);
        }
    }
}
